version: 2.1
executors:
  powershell:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0.400-alpine3.13
    shell: /usr/bin/pwsh

commands:
  create_package_cache_file:
    description: "Create a file of package dependencies to use for generating a cache key."
    parameters:
      filename:
        type: string
    steps:
      - run:
          name: Write module dependencies to requirements.txt file
          command: |
            $modules = Import-LocalizedData -FileName << parameters.filename >>
            $canonicalList = $modules.RequiredModules.ForEach{
              if ($_.RequiredVersion) {
                '{0}={1}' -f $_.ModuleName, $_.RequiredVersion
              }
              elseif ($_.ModuleVersion) {
                '{0}>={1}' -f $_.ModuleName, $_.ModuleVersion
              }
              elseif ($_.ModuleName) {
                $_.ModuleName
              }
              else {
                $_
              }
            }
            $canonicalList | Out-File requirements.txt -Append

jobs:
  cache-modules:
    executor: powershell
    steps:
      - checkout
      - create_package_cache_file:
          filename: QlikResources.psd1
      - persist_to_workspace:
          root: .
          paths:
            - requirements.txt
      - restore_cache:
          keys:
            - psm-cache-v1-{{ checksum "requirements.txt" }}
      - run:
          name: Install CI dependencies
          command: |
            $ProgressPreference = 'SilentlyContinue'
            if (!(Get-Module -Name Psake -ListAvailable)) {
              Write-Information "Installing Psake" -InformationAction Continue
              Install-Module -Name Psake -Force
            }
            if (!(Get-Module -Name Pester -ListAvailable)) {
              Write-Information "Installing Pester" -InformationAction Continue
              Install-Module -Name Pester -MaximumVersion '4.99.999' -Force
            }
      - run:
          name: Install module dependencies
          command: |
            $ProgressPreference = 'SilentlyContinue'
            (Import-LocalizedData -BaseDirectory (Get-Location).Path -FileName QlikResources.psd1).RequiredModules.ForEach({
              if (!(Get-Module -FullyQualifiedName $_ -ListAvailable)) {
                Write-Information "Installing $($_.ModuleName) v$($_.ModuleVersion)" -InformationAction Continue
                Install-Module -Name $_.ModuleName -RequiredVersion $_.ModuleVersion -Force
              }
            })
      - save_cache:
          key: psm-cache-v1-{{ checksum "requirements.txt" }}
          paths:
            - /root/.local/share/powershell/Modules

  test-unit:
    executor: powershell
    steps:
      - checkout
      - create_package_cache_file:
          filename: QlikResources.psd1
      - restore_cache:
          keys:
            - psm-cache-v1-{{ checksum "requirements.txt" }}
      - run:
          name: Run Pester unit tests
          command: |
            New-Item `
              -ItemType Directory `
              -Path /output/test-results/pester | Out-Null

            Invoke-Pester `
              -Script ./tests/unit/ `
              -EnableExit `
              -OutputFormat JUnitXml `
              -OutputFile /output/test-results/pester/results.xml
      - store_test_results:
          path: /output/test-results
      - store_artifacts:
          path: /output/test-results
          destination: test-results

  build:
    executor: powershell
    steps:
      - checkout
      - create_package_cache_file:
          filename: QlikResources.psd1
      - restore_cache:
          keys:
            - psm-cache-v1-{{ checksum "requirements.txt" }}
      - run:
          name: Build
          command: |
            $ProgressPreference = 'SilentlyContinue'
            $ErrorActionPreference = 'Stop'
            Invoke-psake -taskList Package -parameters @{version="$($env:CIRCLE_TAG.Substring(1))"}
      - run:
          name: Check version is later than any published version
          command: |
            $ProgressPreference = 'SilentlyContinue'
            if ((Test-ModuleManifest -Path ./modules/QlikResources/QlikResources.psd1).Version -le (Find-Module -Name QlikResources).Version) {
              Write-Error "Module version must be newer than published version"
            }
      - persist_to_workspace:
          root: .
          paths:
            - modules/QlikResources
            - .package
      - store_artifacts:
          path: .package/QlikResources.zip
          destination: QlikResources.zip

  publish-powershell-gallery:
    working_directory: /workspace/modules/QlikResources
    executor: powershell
    steps:
      - attach_workspace:
          at: /workspace
      - restore_cache:
          keys:
            - psm-cache-v1-{{ checksum "/workspace/requirements.txt" }}
      - run:
          name: Publish module to PowerShell Gallery
          shell: /usr/bin/pwsh
          command: Publish-Module -Path ./ -NuGetApiKey $env:PSG_API_KEY -Verbose -ErrorAction Stop

  publish-github-release:
    working_directory: /workspace/QlikResources
    docker:
      - image: cibuilds/github:latest
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Publish release on GitHub
          command: |
            ghr -t ${GITHUB_TOKEN} \
                -u ${CIRCLE_PROJECT_USERNAME} \
                -r ${CIRCLE_PROJECT_REPONAME} \
                -c ${CIRCLE_SHA1} \
                -replace \
                ${CIRCLE_TAG} \
                /workspace/.package/QlikResources.zip

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - cache-modules:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - test-unit:
          requires:
            - cache-modules
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - build:
          requires:
            - cache-modules
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - publish-powershell-gallery:
          context: powershell-gallery
          requires:
            - test-unit
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - publish-github-release:
          context: github
          requires:
            - test-unit
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+.*/
